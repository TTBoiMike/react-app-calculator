[{"C:\\Users\\micha\\Javascript-course\\react\\react-calculator\\src\\index.js":"1","C:\\Users\\micha\\Javascript-course\\react\\react-calculator\\src\\App.js":"2","C:\\Users\\micha\\Javascript-course\\react\\react-calculator\\src\\reportWebVitals.js":"3","C:\\Users\\micha\\Javascript-course\\react\\react-calculator\\src\\buttons.js":"4","C:\\Users\\micha\\Javascript-course\\react\\react-calculator\\src\\view.js":"5","C:\\Users\\micha\\Javascript-course\\react\\react-calculator\\src\\button.js":"6"},{"size":500,"mtime":499162500000,"results":"7","hashOfConfig":"8"},{"size":3335,"mtime":1608323590160,"results":"9","hashOfConfig":"8"},{"size":362,"mtime":499162500000,"results":"10","hashOfConfig":"8"},{"size":818,"mtime":1608288109156,"results":"11","hashOfConfig":"8"},{"size":226,"mtime":1608389705318,"results":"12","hashOfConfig":"8"},{"size":269,"mtime":1608153220861,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"1qj4g28",{"filePath":"17","messages":"18","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19","usedDeprecatedRules":"16"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24","usedDeprecatedRules":"16"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"C:\\Users\\micha\\Javascript-course\\react\\react-calculator\\src\\index.js",[],["29","30"],"C:\\Users\\micha\\Javascript-course\\react\\react-calculator\\src\\App.js",["31"],"import React from 'react'\nimport View from './view'\nimport Buttons from './buttons'\nimport * as Math from 'mathjs'\nimport './App.css'\n\nclass Calculator extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      equation: \"\",\n        evaluation: \"\",\n        answer: \"\"\n    }\n    this.reset = this.reset.bind(this)\n    this.handleClick = this.handleClick.bind(this)\n    this.handleNumber = this.handleNumber.bind(this)\n    this.handleOperator = this.handleOperator.bind(this)\n    this.executeOperation = this.executeOperation.bind(this)\n    this.calculateAnswer = this.calculateAnswer.bind(this)\n  }\n\n  reset() {\n      this.setState({\n        equation: \"\",\n        evaluation: \"\",\n        answer: \"\"\n      })\n  }\n\n  calculateAnswer() {\n    try {\n      let answer = Math.evaluate(this.state.evaluation)\n      this.setState({\n        answer: answer\n      })\n    } catch (e) {\n      if (e instanceof SyntaxError) {\n        this.setState({\n          answer: \"Error\"\n        })\n      }\n    }\n  }\n\n  handleNumber(element) {\n      this.setState((state) => ({\n      equation: state.equation + element,\n      evaluation: state.evaluation + element\n    }))\n  }\n\n  // executes the operator on state\n  executeOperation(element) {\n      if(element === \"+\") {\n        this.setState((state) => ({\n          equation: state.equation + element,\n          evaluation: state.evaluation + element\n        }))\n      } else if (element === \"-\") {\n        this.setState((state) => ({\n          equation: state.equation + element,\n          evaluation: state.evaluation + element\n        }))\n      } else if (element === \"x\") {\n        this.setState((state) => ({\n          equation: state.equation + element,\n          evaluation: state.evaluation + \"*\"\n        }))\n      } else if (element === \"รท\") {\n        this.setState((state) => ({\n          equation: state.equation + element,\n          evaluation: state.evaluation + \"/\"\n        }))\n      } else if (element === \".\") {\n        this.setState((state) => ({\n          equation: state.equation + element,\n          evaluation: state.evaluation + element\n        }))\n      }\n  }\n\n  // runs everytime an operator is clicked\n  handleOperator(element) {\n    if(element === \"CLEAR\") {\n      // cancels calculation\n      this.reset();\n    } else if (element === \"DEL\") {\n      this.setState((state) => ({\n        equation: state.equation.slice(0, state.equation.length-1),\n        evaluation: state.evaluation.slice(0, state.evaluation.length-1),\n        answer: \"\"\n      }))\n    } else if (element === \"=\") {\n      this.calculateAnswer()\n    } else if (element == \"SAVE\") {\n      console.log(\"SAVE!\")\n    } else {\n      this.executeOperation(element)\n    }\n  }\n\n  // runs everytime a button is clicked\n  handleClick(element) {\n    let buttonClicked = element.currentTarget;\n    \n    if(buttonClicked.className === \"number\") {\n      console.log(\"number clicked\")\n      this.handleNumber(buttonClicked.id)\n    } else {\n      console.log(\"operator clicked\")\n      this.handleOperator(buttonClicked.id)\n    }    \n  }\n\n  \n  render() {\n    return (\n        <>\n      <div className=\"calculator\">\n        <View equation={this.state.equation} answer={this.state.answer}/>\n        <Buttons handleclick={this.handleClick} />\n      </div>\n      </> \n    )\n  }\n}\n\nexport default Calculator;","C:\\Users\\micha\\Javascript-course\\react\\react-calculator\\src\\reportWebVitals.js",[],"C:\\Users\\micha\\Javascript-course\\react\\react-calculator\\src\\buttons.js",["32"],"import React from 'react'\r\nimport Button from './button'\r\n\r\nconst Buttons = (props) => {\r\n    \r\n    const buttons = [0, 1, \"+\", 2, 3, \"-\", 4, 5, \"รท\", 6, 7, \"x\", 8, 9, \".\", \"DEL\", \"CLEAR\", \"=\"]\r\n    \r\n    let displayButtons = [];\r\n    let equals = [];\r\n\r\n    buttons.forEach((button) => {\r\n        if(isNaN(button)) {\r\n            displayButtons.push(\r\n            <Button classname=\"operator\" id={toString(button)} handleclick={props.handleclick}>{button}</Button>\r\n            )\r\n\r\n        } else {\r\n            displayButtons.push(\r\n                <Button classname=\"number\" id={toString(button)} handleclick={props.handleclick}>{button}</Button> \r\n            )\r\n        }\r\n    })\r\n\r\n    return (\r\n        <div className=\"buttons\">\r\n            {displayButtons}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Buttons","C:\\Users\\micha\\Javascript-course\\react\\react-calculator\\src\\view.js",[],"C:\\Users\\micha\\Javascript-course\\react\\react-calculator\\src\\button.js",[],{"ruleId":"33","replacedBy":"34"},{"ruleId":"35","replacedBy":"36"},{"ruleId":"37","severity":1,"message":"38","line":96,"column":24,"nodeType":"39","messageId":"40","endLine":96,"endColumn":26},{"ruleId":"41","severity":1,"message":"42","line":9,"column":9,"nodeType":"43","messageId":"44","endLine":9,"endColumn":15},"no-native-reassign",["45"],"no-negated-in-lhs",["46"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-unused-vars","'equals' is assigned a value but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]