{"version":3,"sources":["view.js","button.js","buttons.js","App.js","reportWebVitals.js","index.js"],"names":["View","props","className","answer","equation","Button","classname","id","children","onClick","handleclick","Buttons","displayButtons","forEach","button","isNaN","push","toString","Calculator","state","evaluation","reset","bind","calculateAnswer","handleNumber","handleOperator","handleOperation","handleClick","this","setState","Math","e","SyntaxError","element","slice","length","console","log","buttonClicked","currentTarget","React","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0RAYeA,EAVD,SAACC,GAEX,OACI,sBAAKC,UAAU,OAAf,UACI,6BAAKD,EAAME,SACX,4BAAIF,EAAMG,eCGPC,EARA,SAACJ,GACZ,OACI,wBAAQC,UAAWD,EAAMK,UAAWC,GAAIN,EAAMO,SAA+BC,QAASR,EAAMS,YAA5F,SACKT,EAAMO,UADkDP,EAAMO,WC0B5DG,EA3BC,SAACV,GAEb,IAEIW,EAAiB,GAgBrB,MAlBgB,CAAC,EAAG,EAAG,IAAK,EAAG,EAAG,IAAK,EAAG,EAAG,OAAK,EAAG,EAAG,IAAK,EAAG,EAAG,IAAK,MAAO,QAAS,KAKhFC,SAAQ,SAACC,GACVC,MAAMD,GACLF,EAAeI,KACf,cAAC,EAAD,CAAQV,UAAU,WAAWC,GAAIU,SAASH,GAASJ,YAAaT,EAAMS,YAAtE,SAAoFI,KAIpFF,EAAeI,KACX,cAAC,EAAD,CAAQV,UAAU,SAASC,GAAIU,SAASH,GAASJ,YAAaT,EAAMS,YAApE,SAAkFI,QAM1F,qBAAKZ,UAAU,UAAf,SACKU,K,QCyFEM,G,wDA3Gb,WAAYjB,GAAQ,IAAD,8BACjB,cAAMA,IACDkB,MAAQ,CACXf,SAAU,GACRgB,WAAY,GACZjB,OAAQ,IAEZ,EAAKkB,MAAQ,EAAKA,MAAMC,KAAX,gBACb,EAAKC,gBAAkB,EAAKA,gBAAgBD,KAArB,gBACvB,EAAKE,aAAe,EAAKA,aAAaF,KAAlB,gBACpB,EAAKG,eAAiB,EAAKA,eAAeH,KAApB,gBACtB,EAAKI,gBAAkB,EAAKA,gBAAgBJ,KAArB,gBACvB,EAAKK,YAAc,EAAKA,YAAYL,KAAjB,gBAZF,E,oDAgBfM,KAAKC,SAAS,CACZzB,SAAU,GACVgB,WAAY,GACZjB,OAAQ,O,wCAKZ,IACE,IAAIA,EAAS2B,IAAcF,KAAKT,MAAMC,YACtCQ,KAAKC,SAAS,CACZ1B,OAAQA,IAEV,MAAO4B,GACHA,aAAaC,aACfJ,KAAKC,SAAS,CACZ1B,OAAQ,a,mCAMH8B,GACTL,KAAKC,UAAS,SAACV,GAAD,MAAY,CAC1Bf,SAAUe,EAAMf,SAAW6B,EAC3Bb,WAAYD,EAAMC,WAAaa,Q,qCAIpBA,GACE,UAAZA,EACDL,KAAKP,QACgB,QAAZY,EACTL,KAAKC,UAAS,SAACV,GAAD,MAAY,CACxBf,SAAUe,EAAMf,SAAS8B,MAAM,EAAGf,EAAMf,SAAS+B,OAAO,GACxDf,WAAYD,EAAMC,WAAWc,MAAM,EAAGf,EAAMC,WAAWe,OAAO,GAC9DhC,OAAQ,OAEW,MAAZ8B,EACTL,KAAKL,kBACe,QAAXU,EACTG,QAAQC,IAAI,SAEZT,KAAKF,gBAAgBO,K,sCAITA,GACE,MAAZA,EACFL,KAAKC,UAAS,SAACV,GAAD,MAAY,CACtBf,SAAUe,EAAMf,SAAW6B,EAC3Bb,WAAYD,EAAMC,WAAa,QAEd,SAAZa,EACTL,KAAKC,UAAS,SAACV,GAAD,MAAY,CACxBf,SAAUe,EAAMf,SAAW6B,EAC3Bb,WAAYD,EAAMC,WAAa,QAGjCQ,KAAKC,UAAS,SAACV,GAAD,MAAY,CAC1Bf,SAAUe,EAAMf,SAAW6B,EAC3Bb,WAAYD,EAAMC,WAAaa,Q,kCAKvBA,GACV,IAAIK,EAAgBL,EAAQM,cAEG,WAA5BD,EAAcpC,WACfkC,QAAQC,IAAI,kBACZT,KAAKJ,aAAac,EAAc/B,MAEhC6B,QAAQC,IAAI,oBACZT,KAAKH,eAAea,EAAc/B,O,+BAMpC,OACI,mCACF,sBAAKL,UAAU,aAAf,UACE,cAAC,EAAD,CAAME,SAAUwB,KAAKT,MAAMf,SAAUD,OAAQyB,KAAKT,MAAMhB,SACxD,cAAC,EAAD,CAASO,YAAakB,KAAKD,uB,GArGVa,IAAMC,YCMhBC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.5306f22d.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst  View = (props) => {\r\n\r\n    return (\r\n        <div className=\"view\">\r\n            <h1>{props.answer}</h1>\r\n            <p>{props.equation}</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default View","import React from 'react'\r\n\r\nconst Button = (props) => {\r\n    return (\r\n        <button className={props.classname} id={props.children} key={props.children} onClick={props.handleclick}>\r\n            {props.children}\r\n        </button>\r\n    )\r\n}\r\n\r\nexport default Button","import React from 'react'\r\nimport Button from './button'\r\n\r\nconst Buttons = (props) => {\r\n    \r\n    const buttons = [0, 1, \"+\", 2, 3, \"-\", 4, 5, \"รท\", 6, 7, \"x\", 8, 9, \".\", \"DEL\", \"CLEAR\", \"=\"]\r\n    \r\n    let displayButtons = [];\r\n    let equals = [];\r\n\r\n    buttons.forEach((button) => {\r\n        if(isNaN(button)) {\r\n            displayButtons.push(\r\n            <Button classname=\"operator\" id={toString(button)} handleclick={props.handleclick}>{button}</Button>\r\n            )\r\n\r\n        } else {\r\n            displayButtons.push(\r\n                <Button classname=\"number\" id={toString(button)} handleclick={props.handleclick}>{button}</Button> \r\n            )\r\n        }\r\n    })\r\n\r\n    return (\r\n        <div className=\"buttons\">\r\n            {displayButtons}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Buttons","import React from 'react'\nimport View from './view'\nimport Buttons from './buttons'\nimport * as Math from 'mathjs'\nimport './App.css'\n\nclass Calculator extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      equation: \"\",\n        evaluation: \"\",\n        answer: \"\"\n    }\n    this.reset = this.reset.bind(this)\n    this.calculateAnswer = this.calculateAnswer.bind(this)\n    this.handleNumber = this.handleNumber.bind(this)\n    this.handleOperator = this.handleOperator.bind(this)\n    this.handleOperation = this.handleOperation.bind(this)\n    this.handleClick = this.handleClick.bind(this)\n  }\n\n  reset() {\n      this.setState({\n        equation: \"\",\n        evaluation: \"\",\n        answer: \"\"\n      })\n  }\n\n  calculateAnswer() {\n    try {\n      let answer = Math.evaluate(this.state.evaluation)\n      this.setState({\n        answer: answer\n      })\n    } catch (e) {\n      if (e instanceof SyntaxError) {\n        this.setState({\n          answer: \"Error\"\n        })\n      }\n    }\n  }\n\n  handleNumber(element) {\n      this.setState((state) => ({\n      equation: state.equation + element,\n      evaluation: state.evaluation + element\n    }))\n  }\n\n  handleOperator(element) {\n    if(element === \"CLEAR\") {\n      this.reset();\n    } else if (element === \"DEL\") {\n      this.setState((state) => ({\n        equation: state.equation.slice(0, state.equation.length-1),\n        evaluation: state.evaluation.slice(0, state.evaluation.length-1),\n        answer: \"\"\n      }))\n    } else if (element === \"=\") {\n      this.calculateAnswer()\n    } else if (element == \"SAVE\") {\n      console.log(\"SAVE!\")\n    } else {\n      this.handleOperation(element)\n    }\n  }\n\n  handleOperation(element) {\n    if (element === \"x\") {\n      this.setState((state) => ({\n          equation: state.equation + element,\n          evaluation: state.evaluation + \"*\"\n      }))\n    } else if (element === \"รท\") {\n      this.setState((state) => ({\n        equation: state.equation + element,\n        evaluation: state.evaluation + \"/\"\n      }))\n    } else {\n      this.setState((state) => ({\n      equation: state.equation + element,\n      evaluation: state.evaluation + element\n      }))\n    }\n  }\n\n  handleClick(element) {\n    let buttonClicked = element.currentTarget;\n    \n    if(buttonClicked.className === \"number\") {\n      console.log(\"number clicked\")\n      this.handleNumber(buttonClicked.id)\n    } else {\n      console.log(\"operator clicked\")\n      this.handleOperator(buttonClicked.id)\n    }    \n  }\n\n  \n  render() {\n    return (\n        <>\n      <div className=\"calculator\">\n        <View equation={this.state.equation} answer={this.state.answer}/>\n        <Buttons handleclick={this.handleClick} />\n      </div>\n      </> \n    )\n  }\n}\n\nexport default Calculator;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}